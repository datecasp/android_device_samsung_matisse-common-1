From cf4845ae7fc3ddda79b2575e6e73aeb35a48bcdd Mon Sep 17 00:00:00 2001
From: sub77 <sub77@ymail.com>
Date: Tue, 16 Feb 2016 06:05:21 +0100
Subject: [PATCH 3/7] matissewifi: touchscreen: mxts_1188s: Fix build when DVFS
 is disabled

Change-Id: I232facdc46fe8aa5a32760bd2880bf1424dc26c4
---
 drivers/input/touchscreen/mxt1188s/mxts_1188s.c     | 16 ++++++++++++++++
 drivers/input/touchscreen/mxt1188s/mxts_sec_1188s.c | 14 ++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/drivers/input/touchscreen/mxt1188s/mxts_1188s.c b/drivers/input/touchscreen/mxt1188s/mxts_1188s.c
index 81b577f..2a6ce3e 100644
--- a/drivers/input/touchscreen/mxt1188s/mxts_1188s.c
+++ b/drivers/input/touchscreen/mxt1188s/mxts_1188s.c
@@ -1031,9 +1031,11 @@ static void mxt_report_input_data(struct mxt_data *data)
 			input_sync(data->input_dev);
 	}
 
+#ifdef CONFIG_SEC_DVFS
 #if TSP_BOOSTER
 	mxt_set_dvfs_lock(data, count);
 #endif
+#endif
 
 	data->finger_mask = 0;
 }
@@ -1171,9 +1173,11 @@ static void mxt_release_all_keys(struct mxt_data *data)
 					input_report_key(data->input_dev, KEY_RECENT, KEY_RELEASE);
 						dev_info(&data->client->dev,
 							"%s: [TSP_KEY] menu R!\n", __func__);
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 						mxt_tkey_set_dvfs_lock(data, !!KEY_RELEASE);
 #endif
+#endif
 				}
 			}
 
@@ -1192,9 +1196,11 @@ static void mxt_release_all_keys(struct mxt_data *data)
 					input_report_key(data->input_dev, KEY_BACK, KEY_RELEASE);
 						dev_info(&data->client->dev,
 							"%s: [TSP_KEY] back R!\n", __func__);
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 						mxt_tkey_set_dvfs_lock(data, !!KEY_RELEASE);
 #endif
+#endif
 			}
 		}
 	}
@@ -1282,9 +1288,11 @@ static void mxt_treat_T15_object(struct mxt_data *data,
 						}
 						data->ignore_back_key_by_menu = false;
 					}
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 						mxt_tkey_set_dvfs_lock(data, !!key_state);
 #endif
+#endif
 				}
 			}
 
@@ -1322,9 +1330,11 @@ static void mxt_treat_T15_object(struct mxt_data *data,
 						}
 						data->ignore_menu_key_by_back = false;
 					}
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 						mxt_tkey_set_dvfs_lock(data, !!key_state);
 #endif
+#endif
 				}
 			}
 
@@ -2294,9 +2304,11 @@ static int mxt_stop(struct mxt_data *data)
 #if ENABLE_TOUCH_KEY
 	mxt_release_all_keys(data);
 #endif
+#ifdef CONFIG_SEC_DVFS
 #if TSP_BOOSTER
 	mxt_set_dvfs_lock(data, -1);
 #endif
+#endif
 
 	data->mxt_enabled = false;
 
@@ -2447,12 +2459,16 @@ static int mxt_touch_finish_init(struct mxt_data *data)
 		goto err_req_irq;
 	}
 
+#ifdef CONFIG_SEC_DVFS
 #if TSP_BOOSTER
 	mxt_init_dvfs(data);
 #endif
+#endif
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 	mxt_tkey_init_dvfs(data);
 #endif
+#endif
 
 	dev_info(&client->dev,  "Mxt touch controller initialized\n");
 
diff --git a/drivers/input/touchscreen/mxt1188s/mxts_sec_1188s.c b/drivers/input/touchscreen/mxt1188s/mxts_sec_1188s.c
index 4ffe6d1..8dfbcc3 100644
--- a/drivers/input/touchscreen/mxt1188s/mxts_sec_1188s.c
+++ b/drivers/input/touchscreen/mxt1188s/mxts_sec_1188s.c
@@ -1554,6 +1554,7 @@ struct tsp_cmd {
 	void			(*cmd_func)(void *device_data);
 };
 
+#ifdef CONFIG_SEC_DVFS
 #if TSP_BOOSTER
 static void boost_level(void *device_data)
 {
@@ -1599,6 +1600,7 @@ static void boost_level(void *device_data)
 	return;
 }
 #endif
+#endif
 
 static struct tsp_cmd tsp_cmds[] = {
 	{TSP_CMD("fw_update", fw_update),},
@@ -1629,9 +1631,11 @@ static struct tsp_cmd tsp_cmds[] = {
 	{TSP_CMD("set_tk_threshold", set_tk_threshold),},
 #endif
 #endif
+#ifdef CONFIG_SEC_DVFS
 #if TSP_BOOSTER
 	{TSP_CMD("boost_level", boost_level),},
 #endif
+#endif
 #if TSP_PATCH
 	{TSP_CMD("patch_update", patch_update),},
 #endif
@@ -2038,6 +2042,7 @@ static ssize_t touchkey_report_dummy_key_store(struct device *dev,
 	return size;
 }
 
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 static ssize_t boost_level_store(struct device *dev,
 				   struct device_attribute *attr,
@@ -2082,6 +2087,7 @@ static ssize_t boost_level_store(struct device *dev,
 	return count;
 }
 #endif
+#endif
 
 static DEVICE_ATTR(touchkey_d_menu, S_IRUGO | S_IWUSR | S_IWGRP, touchkey_d_menu_show, NULL);
 static DEVICE_ATTR(touchkey_d_back, S_IRUGO | S_IWUSR | S_IWGRP, touchkey_d_back_show, NULL);
@@ -2091,9 +2097,11 @@ static DEVICE_ATTR(touchkey_threshold, S_IRUGO | S_IWUSR | S_IWGRP, get_touchkey
 static DEVICE_ATTR(brightness, S_IRUGO | S_IWUSR | S_IWGRP, NULL, touchkey_led_control);
 static DEVICE_ATTR(extra_button_event, S_IRUGO | S_IWUSR | S_IWGRP,
 					touchkey_report_dummy_key_show, touchkey_report_dummy_key_store);
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 static DEVICE_ATTR(boost_level, S_IWUSR | S_IWGRP, NULL, boost_level_store);
 #endif
+#endif
 
 static struct attribute *touchkey_attributes[] = {
 	&dev_attr_touchkey_d_menu.attr,
@@ -2103,9 +2111,11 @@ static struct attribute *touchkey_attributes[] = {
 	&dev_attr_touchkey_threshold.attr,
 	&dev_attr_brightness.attr,
 	&dev_attr_extra_button_event.attr,
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 	&dev_attr_boost_level.attr,
 #endif
+#endif
 	NULL,
 };
 
@@ -2736,6 +2746,7 @@ static void  mxt_sysfs_remove(struct mxt_data *data)
 #endif
 }
 
+#ifdef CONFIG_SEC_DVFS
 #if TSP_BOOSTER
 static void mxt_change_dvfs_lock(struct work_struct *work)
 {
@@ -2860,6 +2871,8 @@ void mxt_init_dvfs(struct mxt_data *data)
 	data->dvfs_lock_status = false;
 }
 #endif
+#endif
+#ifdef CONFIG_SEC_DVFS
 #if MXT_TKEY_BOOSTER
 static void mxt_tkey_change_dvfs_lock(struct work_struct *work)
 {
@@ -2949,3 +2962,4 @@ void mxt_tkey_init_dvfs(struct mxt_data *data)
 	data->tkey_dvfs_lock_status = true;
 }
 #endif
+#endif
-- 
2.7.0.rc3

